(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{539:function(s,a,e){"use strict";e.r(a);var t=e(30),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),e("p",[s._v("我们在使用docker建立容器的时候，往往需要两个容器间进行通讯，比如MySQL与JAVA。所以这篇文章，讲解容器通讯的几种方式。")]),s._v(" "),e("h3",{attrs:{id:"正文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[s._v("#")]),s._v(" 正文")]),s._v(" "),e("h5",{attrs:{id:"link方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#link方式"}},[s._v("#")]),s._v(" Link方式")]),s._v(" "),e("p",[s._v("首先我们先创建数据容器db")]),s._v(" "),e("div",{staticClass:"language-s line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("sudo docker run -idt --name=db mysql\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("使用--link=name:alias name 就是要访问的目标及其，alias就是自定的别名。")]),s._v(" "),e("div",{staticClass:"language-s line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("sudo docker run -it --name=web --link=db:test_link java\ncat /etc/hosts\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("我们看到容器内hosts内多了一条信息")]),s._v(" "),e("div",{staticClass:"language-s line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("172.17.0.11    test_link 600886c7c69d db\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这就意味着我们可以访问到db容器进行通信")]),s._v(" "),e("h5",{attrs:{id:"network方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#network方式"}},[s._v("#")]),s._v(" Network方式")]),s._v(" "),e("h6",{attrs:{id:"新建网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新建网络"}},[s._v("#")]),s._v(" 新建网络")]),s._v(" "),e("p",[s._v("1.下面先创建一个新的Docker网络")]),s._v(" "),e("div",{staticClass:"language-s line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker network create -d bridge my-net\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("-d 参数指定Docker网络类型，有bridge、overlay。")]),s._v(" "),e("h6",{attrs:{id:"连接容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接容器"}},[s._v("#")]),s._v(" 连接容器")]),s._v(" "),e("p",[s._v("分别运行两个容器并连接到新建的my-net网络")]),s._v(" "),e("div",{staticClass:"language-s line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker run -it --rm -name busybox1 --network my-net busybox sh\n\ndokcer run -it --rm -name busybox2 --network my-net busybox sh\n```s\n###### 验证\n下面可以通过ping来证明两个容器间建立了互联关系。\n\n在busybox1容器输入如下命令\n```s\nping busybox2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h5",{attrs:{id:"docker-compose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker Compose")]),s._v(" "),e("p",[s._v("如果有多个容器之间需要互相连接，推荐使用docker compose。")])])}),[],!1,null,null,null);a.default=n.exports}}]);